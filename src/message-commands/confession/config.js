const { EmbedBuilder, ActionRowBuilder, StringSelectMenuBuilder } = require("discord.js");
const db = require("../../data/mongodb");

module.exports = {
    name: "confessionconfig",
    description: "Qu·∫£n l√Ω c·∫•u h√¨nh confession v·ªõi select menu",
    async execute(message, args) {
        // X√≥a tin nh·∫Øn g·ªëc
        try {
            await message.delete();
        } catch (error) {
            console.log("Could not delete message:", error.message);
        }

        const guildSettings = await db.getGuildSettings(message.guild.id);
        const anonymousMode = await db.getAnonymousMode(message.guild.id);

        // T·∫°o embed hi·ªÉn th·ªã c·∫•u h√¨nh hi·ªán t·∫°i
        const configEmbed = new EmbedBuilder()
            .setColor(0x0099FF)
            .setTitle("‚öôÔ∏è C·∫•u h√¨nh Confession Bot")
            .setDescription("Qu·∫£n l√Ω c√†i ƒë·∫∑t confession cho server")
            .addFields(
                {
                    name: "üìù K√™nh Confession",
                    value: guildSettings?.confessionChannel 
                        ? `<#${guildSettings.confessionChannel}>` 
                        : "‚ùå Ch∆∞a thi·∫øt l·∫≠p",
                    inline: true
                },
                {
                    name: "üë®‚Äç‚öñÔ∏è K√™nh Review",
                    value: guildSettings?.reviewChannel 
                        ? `<#${guildSettings.reviewChannel}>` 
                        : "‚ùå Ch∆∞a thi·∫øt l·∫≠p",
                    inline: true
                },
                {
                    name: "üìä Confession Counter",
                    value: guildSettings?.confessionCounter?.toString() || "0",
                    inline: true
                },
                {
                    name: "üïµÔ∏è Ch·∫ø ƒë·ªô ·∫®n danh",
                    value: anonymousMode ? "‚úÖ B·∫≠t" : "‚ùå T·∫Øt",
                    inline: true
                }
            )
            .setFooter({
                text: `Confession Bot ‚Ä¢ ${message.guild.name}`,
                iconURL: message.guild.iconURL(),
            })
            .setTimestamp();

        // T·∫°o select menu cho c√°c action
        const selectMenu = new StringSelectMenuBuilder()
            .setCustomId("config_action")
            .setPlaceholder("Ch·ªçn h√†nh ƒë·ªông...")
            .addOptions([
                {
                    label: "üìù Thi·∫øt l·∫≠p k√™nh confession",
                    description: "Ch·ªçn k√™nh ƒë·ªÉ ƒëƒÉng confessions ƒë√£ duy·ªát",
                    value: "setup_confession",
                    emoji: "üìù"
                },
                {
                    label: "üë®‚Äç‚öñÔ∏è Thi·∫øt l·∫≠p k√™nh review",
                    description: "Ch·ªçn k√™nh ƒë·ªÉ review confessions",
                    value: "setup_review",
                    emoji: "üë®‚Äç‚öñÔ∏è"
                },
                {
                    label: "üîÑ Thi·∫øt l·∫≠p c·∫£ hai k√™nh",
                    description: "Thi·∫øt l·∫≠p c·∫£ k√™nh confession v√† review",
                    value: "setup_both",
                    emoji: "üîÑ"
                },
                {
                    label: "üïµÔ∏è Ch·∫ø ƒë·ªô ·∫®n danh",
                    description: "B·∫≠t/t·∫Øt ch·∫ø ƒë·ªô ·∫©n danh cho confessions",
                    value: "toggle_anonymous",
                    emoji: "üïµÔ∏è"
                },
                {
                    label: "üìä Xem th·ªëng k√™",
                    description: "Xem th·ªëng k√™ confession chi ti·∫øt",
                    value: "view_stats",
                    emoji: "üìä"
                }
            ]);

        const row = new ActionRowBuilder().addComponents(selectMenu);

        const configMsg = await message.channel.send({
            embeds: [configEmbed],
            components: [row]
        });

        // X√≥a tin nh·∫Øn sau 5 ph√∫t
        setTimeout(() => {
            configMsg.delete().catch(() => {});
        }, 300000);
    },
}; 